(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))c(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&c(n)}).observe(document,{childList:!0,subtree:!0});function s(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerpolicy&&(r.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?r.credentials="include":e.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function c(e){if(e.ep)return;e.ep=!0;const r=s(e);fetch(e.href,r)}})();const i={form:document.querySelector("#task-form"),list:document.querySelector("#task-list")};function l(t){return`<li class="task-list-item">
      <button class="task-list-item-btn">Удалить</button>
      <h3>${t.taskName}</h3>
      <p>${t.taskText}</p>
  </li>`}function u(){const t={};return new FormData(i.form).forEach((o,s)=>{t[s]=o}),t}const a="tasks";function f(t){const o=JSON.parse(localStorage.getItem(a))||[];o.push(t),localStorage.setItem(a,JSON.stringify(o))}const d={saveTask:f};i.form.addEventListener("submit",m);function m(t){t.preventDefault();const o=t.currentTarget,s=u();i.list.insertAdjacentHTML("beforeend",l(s)),d.saveTask(s),o.reset()}
//# sourceMappingURL=commonHelpers.js.map
