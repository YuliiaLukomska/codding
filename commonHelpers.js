(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))c(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&c(i)}).observe(document,{childList:!0,subtree:!0});function n(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerpolicy&&(o.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?o.credentials="include":e.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function c(e){if(e.ep)return;e.ep=!0;const o=n(e);fetch(e.href,o)}})();const s={form:document.querySelector("#task-form"),list:document.querySelector("#task-list")};function a(t){return`<li class="task-list-item">
      <button class="task-list-item-btn">Удалить</button>
      <h3>${t.taskName}</h3>
      <p>${t.taskText}</p>
  </li>`}function d(){const t={};return new FormData(s.form).forEach((r,n)=>{t[n]=r}),t}const l="tasks";function m(t){const r=u();r.push(t),localStorage.setItem(l,JSON.stringify(r))}function u(){return JSON.parse(localStorage.getItem(l))||[]}const f={saveTask:m,getAll:u};function p(){const r=f.getAll().map(a).join("");s.list.insertAdjacentHTML("beforeend",r)}s.form.addEventListener("submit",g);function g(t){t.preventDefault();const r=t.currentTarget,n=d();s.list.insertAdjacentHTML("beforeend",a(n)),f.saveTask(n),r.reset()}p();
//# sourceMappingURL=commonHelpers.js.map
